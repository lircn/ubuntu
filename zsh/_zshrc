# Li Zheng <6007381@qq.com>


export ZSH=~/.oh-my-zsh

# ignore complition
zstyle ':completion:*:complete:-command-:*:*' ignored-patterns '*.pdf|*.exe|*.dll'

ZSH_THEME="lir"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(autojump)

# User configuration
# 
MAVEN_HOME=/usr/local/apache-maven-3.5.2
export MAVEN_HOME

. /Library/Python/2.7/site-packages/powerline/bindings/bash/powerline.sh

# go
GOPATH="$HOME/go"
export GOPATH

GOBIN="$HOME/go/bin"
export GOBIN

PATH="$HOME/bin:$HOME/scripts:$PATH:${MAVEN_HOME}/bin:$GOBIN:/usr/local/go/bin"
export PATH


export NDK="/home/zaynli/work/Android/android-ndk-r17"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='mvim'
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias relay1='ssh lizheng05@relay01.kuaishou.com'
alias relay2='ssh lizheng05@relay02.kuaishou.com'
alias relay3='ssh lizheng05@relay03.kuaishou.com'
alias relay4='ssh lizheng05@relay04.kuaishou.com'
alias sshdev='ssh lizheng05@dev8.corp.kuaishou.com'

alias go_build_linux='CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build'
alias go_build_windows='CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias vi='vim'

alias -s c=vim
alias -s h=vim
alias -s zsh=vim
alias -s txt=vim
alias -s html=vim

export DISABLE_UNTRACKED_FILES_DIRTY=true
setopt HIST_IGNORE_DUPS
export POWERLINE_CONFIG_COMMAND=$HOME/git/powerline/scripts/powerline-config

ulimit -c unlimited


function lhanslir()
{
    if [[ $# -ge 1 ]]; then
        mtu=$1
    else
        mtu=1400
    fi
    sudo ~/work/hans/hans -c 106.186.28.188 -p lirlir -n lirlir -m $mtu
}

function lsshlir()
{
    ssh -CNfg -D 127.0.0.1:28888 lir@10.50.50.1
}

function xfind()
{
    find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .git -prune -o  -type f -name "*$**" -print
}

function xfindi()
{
    find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .git -prune -o  -type f -iname "*$**" -print
}

function jgrep()
{
    find . -name .repo -prune -o -name .git -prune -o  -type f -name "*\.java" -print0 | xargs -0  grep "$*"
}

function jgrepi()
{
    find . -name .repo -prune -o -name .git -prune -o  -type f -name "*\.java" -print0 | xargs -0 grep -i "$*"
}

function cgrep()
{
    find . -name .repo -prune -o -name .git -prune -o -type f \( -name '*.c' -o -name '*.cc' -o -name '*.cpp' -o -name '*.h' \) -print0 | xargs -0 grep "$*"
}

function cgrepi()
{
    find . -name .repo -prune -o -name .git -prune -o -type f \( -name '*.c' -o -name '*.cc' -o -name '*.cpp' -o -name '*.h' \) -print0 | xargs -0 grep -i "$*"
}

function resgrep()
{
    for dir in `find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .git -prune -o -name res -type d`; do find $dir -type f -name '*\.xml' -print0 | xargs -0 grep "$*"; done;
}

function resgrepi()
{
    for dir in `find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .git -prune -o -name res -type d`; do find $dir -type f -name '*\.xml' -print0 | xargs -0 grep -i "$*"; done;
}

# Makefile
function mgrep()
{
    find . -name .repo -prune -o -name .git -prune -o  -type f \( -name "Makefile" -o -name '*.mk' -o -name '*.cmake' \) -print0 | xargs -0 grep "$*"
}

function mgrepi()
{
    find . -name .repo -prune -o -name .git -prune -o  -type f \( -name "Makefile" -o -name '*.mk' -o -name '*.cmake' \) -print0 | xargs -0 grep -i "$*"
}

# pdf
function pgrep()
{
    find . -name '*.pdf' -print -exec pdftotext {} /tmp/tmp.txt \; -exec grep --color "$*" /tmp/tmp.txt \;
}

function pgrepi()
{
    find . -name '*.pdf' -print -exec pdftotext {} /tmp/tmp.txt \; -exec grep -i --color "$*" /tmp/tmp.txt \;
}

function xgrep()
{
    find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .svn -prune -o -name .git -prune -o  -type f -name "*" -print0 | xargs -0 grep "$*"
}

function xgrepi()
{
	find . -name tags -prune -o -name cscope.out -prune -o -name .repo -prune -o -name .git -prune -o  -type f -name "*" -print0 | xargs -0 grep -i "$*"
}
